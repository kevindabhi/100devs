
/* This is CSS reset that I use, the actual CSS for the page begins below this.*/

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

*, *::before, *::after {
    box-sizing: border-box;
}



/* The actual styling begins here. */


/* This is the container, I did not want the web page to be taking very wide space so I limited it to 900px. The reason I used Max-width is because if it is anything smaller then there is no issues, if it was width 900 then the css would try to keep the width at 900px all the time, this would cause issues. */

.container
{
    background: lightskyblue;
    margin: 0 auto;
    max-width: 900px;
    padding: 20px;
    color: white;
}

/* I am using rem for some and px for others, I usually try and use rem because they are scaleable and relative size instead of fixed like pixel. */

img{
   
    width: 150px;
    float: right;
    padding: 1rem;
}


.wrapper
{
    border: 5px solid green;
   
    padding: 20px;
}

h1{
    margin: 2rem;
    font-size: 2.5rem;
    font-style: italic;
    text-align: center;

}

.row{
    display: flex;
}

.mid-links{
    justify-content: center;
    gap: 0.3rem;
}

h2{
    text-decoration: none;
    color: white;
    font-size: 2rem;
    font-weight: bold;
    margin: 2rem auto;
}

a{
    color: green;
   
    font-weight: bold;
}



.about-us-color{
    text-decoration: none;
color: white;
}

.L{
    color: darkolivegreen;
    font-weight: bold;
}

.bottom-nav {
    justify-content: center;
    gap: 0.6rem;
}

.main{
    margin-bottom: 2rem;
}

p{
    font-size: 1.5rem;
}




/* The Resonsiveness begins here. I experimented a little and found at which size does the responsiveness seem more fluid. For me it was 500px*/


@media screen and (max-width: 500px) 
{

header{
    float: left;
    clear: both;
}

img{
    display: block;
    float: none;
    margin: 0 auto;
    text-align:center; /* This is an image but still the text align property work, I don't know why I just know it works lol.*/
    
}
h2{
    text-align: center;
    /*This is to center the "About us"*/

}

header{
    margin-bottom: 10px;
    /* When I centered "about us" there was not much space between that and element above so I put a bit of margin on the header element to create some space*/
}

}